@page "/PlayerEntry"
@inject PlayerEntryState state
@inject NavigationManager NavigationManager
<style>
    .NameRow {
        display: flex;
    }
    .InputField {
        margin: 2px;
    }
</style>
<div>
    <div class="NameRow">
        Name:
        <input class="InputField" @ref="textInput" type="text" @bind-value="currentName" @onkeyup="@Enter"/>
        <button class="InputField" @onclick="OnAdd">Add</button>
        <button class="InputField" @onclick="OnDone">Done</button>
    </div>
    <div class="ListRow">
        <ul>
        @foreach (var name in playerNames)
        {
            <li>@name</li>
        }
        </ul>
    </div>
</div>

@code {

    ElementReference textInput;
    List<string> playerNames = new List<string>();
    public async void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await OnAdd();
        }
    }
    string currentName;
    public async Task OnAdd()
    {
        playerNames.Add(currentName);
        currentName = string.Empty;
        StateHasChanged();
        await textInput.FocusAsync();
    }
    public void OnDone()
    {
        state.TaskSource.SetResult(playerNames);
        NavigationManager.NavigateTo("Game");
    }
    protected override async void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        await textInput.FocusAsync();
    }
}
